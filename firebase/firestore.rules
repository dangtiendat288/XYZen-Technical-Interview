rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user is accessing their own document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Users collection rules
    match /users/{userId} {
      // Allow reading public profile data for all authenticated users
      allow read: if isAuthenticated();
      
      // Allow users to modify only their own profile
      allow write: if isOwner(userId);
      
      // Optional: nested collections within a user's data
      match /privateData/{document=**} {
        allow read, write: if isOwner(userId);
      }
    }
    
    // Add rules for other collections as needed
    // For example, posts collection
    match /posts/{postId} {
      // Anyone can read posts
      allow read: if isAuthenticated();
      
      // Only post owner can update or delete
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && 
                            request.auth.uid == resource.data.authorId;
    }
    
    // Default deny
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
